items <- allData[rowSums(allData[ , 2:ncol(allData)])!=0, ][ , 2:ncol(allData)]
items1 <- subset(items, select = -c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32))
items2 <- subset(items, select = -c(1,2,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32))
items3 <- subset(items, select = -c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,25,26,27,28,29,30,31,32))
items4 <- subset(items, select = -c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24))
View(items1)
View(items2)
View(items3)
View(items2)
View(items3)
View(items4)
rel <- reliability(items, itemal=TRUE)
rel1 <- reliability(items1, itemal=TRUE)
rel2 <- reliability(items2, itemal=TRUE)
rel3 <- reliability(items3, itemal=TRUE)
rel4 <- reliability(items4, itemal=TRUE)
rel1 <- reliability(items1, itemal=TRUE)
View(items1)
items1 <- subset(items, select = -c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32))
rel1 <- reliability(items1, itemal=TRUE)
View(items1)
rel2$alpha
rel3$alpha
rel4$alpha
rel1$alpha
rel2$pBis
rel3$pBis
rel4$pBis
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
x <- c(2,3,4,5)
x <- subset(x, select=-c(3))
x <- subset(x, select = -c(3))
x <- subset(x, select = c(3))
x1 <- c(2,3,4,5)
x <- subset(x1, select = c(3))
x <- subset(x1, select = c(3,2))
?subset
x <- subset(x1, select = -c(3,2))
x <- subset(x1, select = -c(3))
x <- x[-2]
x <- x[-2,3]
x <- x[-2,-3]
x <- x[-2,-1]
x <- x[-2,1]
x <- x[-c(2,1)]
x1 <- c(2,3,4,5)
x <- x[-c(2,1)]
x <- c(2,3,4,5)
x <- x[-c(2,1)]
x <- c(2,3,4,5)
x <- x[-c(2,1)]
length(x)
shiny::runApp('Desktop/Neuer Ordner')
x <- x[-tet]
x <- c(2,3,4,5)
tet <- c(2,3)
x <- x[-tet]
x <- c(2,3,4,5)
tet <- c(2,3)
x <- c(8,9,10,11)
tet <- c(2,3)
x <- c(8,9,10,11)
tet <- c(2,3)
x <- x[-tet]
x <- c(8,9,10,11)
tet <- c(2,3)
x <- x[-tet]
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
library(knitr)
shiny::runApp('Desktop/Neuer Ordner')
Sys.which('texi2dvi')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
library(tools)
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
runGist('https://gist.github.com/yihui/6091942')
shiny::runApp('Desktop/Neuer Ordner')
runGist('https://gist.github.com/yihui/6091942')
library(knitr)
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
shiny::runApp('Desktop/Neuer Ordner')
data.frame(apply(items, c(2), function(x) {rowSums - x}))
rawData <- read.csv("/users/fliebm/Documents/14 Facharbeit Liebmann/liebmannexport.csv", header=TRUE, sep=",")
items <- allData[rowSums(allData[ , 2:ncol(allData)])!=0, ][ , 2:ncol(allData)]
allData <- cbind(unique(rawData$liebmannnr), unstack(rawData, Punkte ~ Fragennummer))
items <- allData[rowSums(allData[ , 2:ncol(allData)])!=0, ][ , 2:ncol(allData)]
data.frame(apply(items, c(2), function(x) {rowSums - x}))
data.frame(apply(items, c(2), function(x) {rowSums(items) - x}))
apply(items, c(2), function(x) {rowSums(items) - x})
test <- apply(items, c(2), function(x) {rowSums(items) - x})
test <- data.frame(apply(items, c(2), function(x) {rowSums(items) - x}))
View(items)
View(test)
rowSums(items)
test <- data.frame(apply(items, c(1), function(x) {rowSums(items) - x}))
test <- data.frame(apply(items, 2, function(x) {rowSums(items) - x}))
test <- data.frame(apply(items, 2, function(x) {rowSums(items) - x}))
View(test)
}))
test <- data.frame(apply(items, 2, function(x) {x}))
View(test)
apply(items, 2, function(x) {rowSums(items) - x})
View(test)
test <- apply(items, 2, function(x) {rowSums(items) - x})
test <- data.frame(apply(items, 2, function(x) {rowSums(items) - x}))
View(test)
apply(items, 2, function(x) {rowSums(items) - x})
test <- cov(apply(items, 2, function(x) {rowSums(items) - x}))
test <- cov(apply(items, 2, function(x) {rowSums(items) - x}))
cov(apply(items, 2, function(x) {rowSums(items) - x}))
cov(items, apply(items, 2, function(x) {rowSums(items) - x}))
apply(items, 2, sd)
itemsCorr <- apply(items, 2, function(x) {rowSums(items) - x})
cov(items, itemsCorr)
apply(items, 2, sd)
apply(itemsCorr, 2, sd)
cov(items, itemsCorr) / (apply(items, 2, sd) * apply(itemsCorr, 2, sd))
diag(cov(items, itemsCorr) / (apply(items, 2, sd) * apply(itemsCorr, 2, sd)))
diag(cov(items, itemsCorr) / (apply(items, 2, sd) * apply(itemsCorr, 2, sd)))
itemDataCorr <- apply(itemData, 2, function(x) {rowSums(itemData) - x})
itemData <- items
itemDataCorr <- apply(itemData, 2, function(x) {rowSums(itemData) - x})
diag(cov(itemData, itemDataCorr) / (apply(itemData, 2, sd) * apply(itemDataCorr, 2, sd)))
library(CTT)
reliability(items)
reliability(items)
reliability(items)$pBis
1 <- reliability(items)$pBis
a1 <- reliability(items)$pBis
a2 <- diag(cov(itemData, itemDataCorr) / (apply(itemData, 2, sd) * apply(itemDataCorr, 2, sd)))
rbind(a1, a2)
aa<-rbind(a1, a2)
aa<-data.frame(rbind(a1, a2))
View(aa)
aa<-data.frame(cbind(a1, a2))
View(aa)
aa$b <- aa$a1 - aa$a2
View(aa)
View(aa)
View(aa)
round(colSums(itemData) / (nrow(itemData) * maxPoints)), 2)
round(colSums(itemData) / (nrow(itemData) * maxPoints), 2)
x <- c(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,)
x <- c(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2)
round(colSums(itemData) / (nrow(itemData) * x), 2)
itemDifficulties <- function (itemData, maxPoints)
{
return (round(colSums(itemData) / (nrow(itemData) * maxPoints)), 2)
}
itemTotalCorrelations <- function (itemData)
{
itemDataCorr <- apply(itemData, 2, function(x) {rowSums(itemData) - x})
return (round(diag(cov(itemData, itemDataCorr) / (apply(itemData, 2, sd) * apply(itemDataCorr, 2, sd)))), 2)
}
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
z < c()
z <- c()
length(z)
shiny::runApp('Desktop/NeuerOrdner')
rm <- c(2,4,6,8,10)
rm[-1]
rm-1
out <- c(1,2,3)
out <- c(2,3)
rm[-(out-1)]
rm[-out]
shiny::runApp('Desktop/NeuerOrdner')
rawData <- read.csv("/users/fliebm/Documents/14 Facharbeit Liebmann/liebmannexport.csv", header=TRUE, sep=",")
allData <- cbind(unique(rawData$liebmannnr), unstack(rawData, Punkte ~ Fragennummer))
items <- allData[rowSums(allData[ , 2:ncol(allData)])!=0, ][ , 2:ncol(allData)]
# returns the slope of a linear function
calculateSlope <- function (x1, y1, x2, y2)
{
return ((y2 - y1) / (x2 - x1))
}
# returns the intercept of a linear function
calculateIntercept <- function (y, m, x)
{
return (y - m * x)
}
# returns y based on m, x, q
calculateY <- function (m, x, q)
{
return (m * x + q)
}
# returns a value rounded to fourths
round25 <- function (n)
{
return (round(n / 0.25) * 0.25)
}
# returns a vector of item difficulties, rounded to 2 digits
itemDifficulties <- function (itemData, maxPoints)
{
return (round(colSums(itemData) / (nrow(itemData) * maxPoints), 2))
}
# returns a vector of item total correlations, rounded to 2 digits
itemTotalCorrelations <- function (itemData)
{
itemDataCorr <- apply(itemData, 2, function(x) {rowSums(itemData) - x})
return (round(diag(cov(itemData, itemDataCorr) / (apply(itemData, 2, sd) * apply(itemDataCorr, 2, sd))), 2))
}
rowSums(allData)
rowSums(allData [2:ncol(allData)])
scores <- rowSums(allData[2:ncol(allData)])
vect <- seq(1:90)
apply(vect, max)
apply(vect, 1, max)
apply(vect, 2, max)
apply(vect, 2, mean)
lapply(vect, 2, mean)
lapply(vect, mean)
sapply(vect, mean)
t <- sapply(vect, mean)
sapply(vect, function(x) {
calculateSlope(90, 6, x, 4)
})
sapply(vect, function(x) {
t <- calculateSlope(90, 6, x, 4)
})
sapply(vect, function(x) {
t <- calculateSlope(90, 6, x, 4)
calculateIntercept(4, t, x)
})
sapply(vect, function(x) {
t <- calculateSlope(90, 6, x, 4)
calculateIntercept(6, t, x)
})
sapply(vect, function(x) {
s <- calculateSlope(90, 6, x, 4)
i <- calculateIntercept(4, t, x)
if (x > 2) { break}
})
sapply(vect, function(x) {
s <- calculateSlope(90, 6, x, 4)
i <- calculateIntercept(4, t, x)
g <- calculateY(s, x, i)
})
sapply(vect, function(x) {
s <- calculateSlope(x, 4, 90, 6)
i <- calculateIntercept(4, t, x)
g <- calculateY(s, x, i)
})
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
library(xtable)
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
shiny::runApp('Desktop/NeuerOrdner')
rawData <- read.csv("/users/fliebm/Documents/14 Facharbeit Liebmann/liebmannexport.csv", header=TRUE, sep=",")
allData <- cbind(unique(rawData$liebmannnr), unstack(rawData, Punkte ~ Fragennummer))
testliste.florentin <- read.csv("~/Documents/14 Facharbeit Liebmann/testliste florentin.csv")
View(testliste.florentin)
data <- tetliste.florentin
data <- testliste.florentin
View(data)
View(data)
sum(data[data$note >= 4])
data[data$note >= 4]
View(data)
data[ , data$note >= 4]
data[1 , 3]
data[1 , 2]
data[1 , data$note >= 4]
data[1 , data[ , 2] >= 4]
data[data$note >= 4, ]
sum(data[data$note >= 4, ])
data[data$note >= 4, ]
testliste.florentin <- read.csv("~/Desktop/testliste florentin.csv")
View(testliste.florentin)
data <- testliste.florentin
data[data$note >= 4, ]
sum(data$note >= 4)
rawData <- read.csv("/users/fliebm/Documents/14 Facharbeit Liebmann/liebmannexport.csv", header=TRUE, sep=",")
allData <- cbind(unique(rawData$liebmannnr), unstack(rawData, Punkte ~ Fragennummer))
View(data)
?merge
test <- merge(data, allData, by = "liebmannnr")
View(data)
View(allData)
colnames(allData) <- c("liebmannnr")
View(allData)
test <- merge(data, allData, by = "liebmannnr")
View(test)
test$punkte <- rowSums(test)
View(test)
test$punkte <- rowSums(test[ , 3:33])
View(test)
View(test)
test <- cbind(test$liebmannnr, test$note, test$punkte)
test <- data.frame(test$liebmannnr, test$note, test$punkte)
data <- testliste.florentin
sum(data$note >= 4)
colnames(allData) <- c("liebmannnr")
test <- merge(data, allData, by = "liebmannnr")
test$punkte <- rowSums(test[ , 3:33])
test <- data.frame(test$liebmannnr, test$note, test$punkte)
View(test)
test[test$note = 6]
test[test$note == 6]
View(test)
test[test$test.note == 6]
test[test$test.note == 6, ]
max(test[test$test.note == 6, ])
max(test$punkte[test$test.note == 6, ])
max(test[test$test.note == 6, ])
test[test$test.note == 6, ]
6max <- test[test$test.note == 6, ]
max6 <- test[test$test.note == 6, ]
max(max6$punkte)
View(max6)
max(max6$test.punkte)
max6 <- test$test.punkte[test$test.note == 6, ]
data <- testliste.florentin
sum(data$note >= 4)
colnames(allData) <- c("liebmannnr")
test <- merge(data, allData, by = "liebmannnr")
test$punkte <- rowSums(test[ , 3:33])
test <- data.frame(test$liebmannnr, test$note, test$punkte)
max6 <- test$test.punkte[test$test.note == 6, ]
max6 <- test$test.punkte[ ,test$test.note == 6]
max(max6$test.punkte)
min(max6$test.punkte)
max6 <- test$test.punkte[test$test.note == 4, ]
data <- testliste.florentin
sum(data$note >= 4)
colnames(allData) <- c("liebmannnr")
test <- merge(data, allData, by = "liebmannnr")
test$punkte <- rowSums(test[ , 3:33])
test <- data.frame(test$liebmannnr, test$note, test$punkte)
max6 <- test$test.punkte[test$test.note == 6, ]
max6 <- test[test$test.note == 6, ]
max4 <- test[test$test.note == 4, ]
min(max6$test.punkte)
min(max4$test.punkte)
max(max4$test.punkte)
(43+33)/2
(83+71)/2
View(data)
View(test)
rawData <- read.csv("/users/fliebm/Documents/14 Facharbeit Liebmann/neue Daten/liebmannexport.csv", header=TRUE, sep=",")
allData <- cbind(unique(rawData$liebmannnr), unstack(rawData, Punkte ~ Fragennummer))
View(allData)
sum(data$note >= 4)
colnames(allData) <- c("liebmannnr")
test <- merge(data, allData, by = "liebmannnr")
test$punkte <- rowSums(test[ , 3:33])
test <- data.frame(test$liebmannnr, test$note, test$punkte)
max6 <- test[test$test.note == 6, ]
min(max6$test.punkte)
max(max6$test.punkte)
max4 <- test[test$test.note == 4, ]
min(max4$test.punkte)
max(max4$test.punkte)
(40.5 + 32)/2
(82.5 + 70.5)/2
shiny::runApp('Desktop/myApp')
mean(test$test.note)
sum(data$note == 1)
test2 <- merge(data, rawData, by = "liebmannnr")
View(test2)
View(test2)
write.csv(test2, file = "/users/fliebm/Documents/14 Facharbeit Liebmann/common.csv")
shiny::runApp('Desktop/myApp')
test2 <- data.frame(merge(data, rawData, by = "liebmannnr"))
View(test2)
write.csv(test2, file = "/users/fliebm/Documents/14 Facharbeit Liebmann/common.csv")
shiny::runApp('Desktop/myApp')
?write.csv
write.csv(test2, file = "/users/fliebm/Documents/14 Facharbeit Liebmann/common.csv", row.names=FALSE)
shiny::runApp('Desktop/myApp')
test2 <- subset(test2, -c(2))
test2 <- subset(test2, select = -c(2))
write.csv(test2, file = "/users/fliebm/Documents/14 Facharbeit Liebmann/common.csv", row.names=FALSE)
shiny::runApp('Desktop/myApp')
sum(data$note == 1)
data <- testliste.florentin
sum(data$note == 1)
shiny::runApp('Desktop/myApp')
sum(data$note == 3)
sum(data$note == 2.75)
sum(data$note == 2.5)
sum(data$note == 6)
sum(data$note == 5.75)
sum(data$note == 5)
sum(data$note == 4)
shiny::runApp('Desktop/myApp')
max(test$test.punkte)
data <- testliste.florentin
testliste.florentin <- read.csv("~/Documents/14 Facharbeit Liebmann/testliste florentin.csv")
View(testliste.florentin)
data <- testliste.florentin
rawData <- read.csv("/users/fliebm/Documents/14 Facharbeit Liebmann/neue Daten/liebmannexport.csv", header=TRUE, sep=",")
test2 <- data.frame(merge(data, rawData, by = "liebmannnr"))
View(test2)
rawData[rawData$liebmannnr == 5490, ]
View(test2)
shiny::runApp('Desktop/myApp')
shiny::runGitHub("inf4oec", "fliebm")
shiny::runApp('GitHub/inf4oec')
shiny::runApp('GitHub/inf4oec')
shiny::runApp('GitHub/inf4oec')
shiny::runGitHub("inf4oec", "fliebm")
shiny::runGitHub("inf4oec", "fliebm")
install.packages("shiny")
install.packages("reshape2")
install.packages("knitr")
install.packages("xtable")
shiny::runGitHub("inf4oec", "fliebm")
install.packages("shiny")
install.packages("reshape2")
install.packages("knitr")
install.packages("xtable")
shiny::runGitHub("inf4oec", "fliebm")
shiny::runGitHub("inf4oec", "fliebm")
install.packages("shiny")
install.packages("reshape2")
install.packages("knitr")
install.packages("xtable")
shiny::runGitHub("inf4oec", "fliebm")
shiny:runGitHub("inf4oec", "fliebm")
shiny::runGitHub("inf4oec", "fliebm")
shiny::runGitHub("inf4oec", "fliebm")
?write.table
?write.csv
shiny::runGitHub("inf4oec", "fliebm")
shiny::runGitHub("inf4oec", "fliebm")
shiny::runGitHub("inf4oec", "fliebm")
shiny::runGitHub("inf4oec/app", "fliebm")
shiny::runGitHub("inf4oec", "fliebm", subdir = "app")
shiny::runGitHub("inf4oec", "fliebm")
library(RUnit)
source("functions/calculateSlope.R")
source("functions/calculateIntercept.R")
source("functions/calculateY.R")
source("functions/round25.R")
source("functions/itemDifficulties.R")
source("functions/itemTotalCorrelations.R")
test.suite <- defineTestSuite("inf4oec", dirs = file.path("tests"), testFileRegexp = "._test.R")
test.result <- runTestSuite(test.suite)
printTextProtocol(test.result)
library(RUnit)
source("functions/calculateSlope.R")
setwd("~/Desktop/unit_tests")
library(RUnit)
source("functions/calculateSlope.R")
source("functions/calculateIntercept.R")
source("functions/calculateY.R")
source("functions/round25.R")
source("functions/itemDifficulties.R")
source("functions/itemTotalCorrelations.R")
test.suite <- defineTestSuite("inf4oec", dirs = file.path("tests"), testFileRegexp = "._test.R")
test.result <- runTestSuite(test.suite)
printTextProtocol(test.result)
